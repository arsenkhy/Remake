{"ast":null,"code":"var _jsxFileName = \"/Users/arsen/Desktop/Projects/remake_app/client/src/Search/SearchBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport './SearchBar.css';\nimport ImageDisplay from '../ImageDisplay/ImageDisplay.jsx';\nimport ButtonList from '..//ButtonList.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst allowedMovies = require('./data/allowed_movies.json');\nconst SearchBar = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    const fetchMovieTitles = async () => {\n      try {\n        const response = await axios.get('https://api.themoviedb.org/3/search/movie', {\n          params: {\n            api_key: '8baba8ab6b8bbe247645bcae7df63d0d',\n            query: searchTerm\n          }\n        });\n        const matches = response.data.results.filter(movie => allowedMovies.movies.includes(movie.title));\n        const titles = matches.map(movie => movie.title);\n        setOptions(titles);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchMovieTitles();\n  }, [searchTerm]);\n  const [imageButtons, setImageButtons] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const handleButtonSearch = () => {\n    if (selectedImage) {\n      setImageButtons([...imageButtons, selectedImage]);\n      setSelectedImage(null);\n    }\n  };\n  const handleButtonDelete = buttonNumber => {\n    setImageButtons(imageButtons.filter(number => number !== buttonNumber));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"search-container\",\n    children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n      freeSolo: true,\n      options: options,\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n        ...params,\n        className: \"search-input\",\n        label: \"Search movie titles\",\n        variant: \"outlined\",\n        value: searchTerm,\n        onChange: event => setSearchTerm(event.target.value),\n        InputProps: {\n          ...params.InputProps,\n          className: 'search-input'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this),\n      renderOption: option => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-option\",\n        children: option\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 33\n      }, this),\n      getOptionLabel: option => option,\n      popupIcon: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-indicator\",\n        children: \"\\u25BC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"search-button\",\n      type: \"button\",\n      onClick: handleButtonSearch,\n      children: \"Add Image Display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonList, {\n      buttons: imageButtons,\n      handleButtonDelete: handleButtonDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), selectedImage && /*#__PURE__*/_jsxDEV(ImageDisplay, {\n      selectedImage: selectedImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"TTQEwx8wI5JXYgs6SC8jDIj+u+Y=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","useEffect","axios","Autocomplete","TextField","ImageDisplay","ButtonList","jsxDEV","_jsxDEV","allowedMovies","require","SearchBar","_s","searchTerm","setSearchTerm","options","setOptions","fetchMovieTitles","response","get","params","api_key","query","matches","data","results","filter","movie","movies","includes","title","titles","map","error","console","imageButtons","setImageButtons","selectedImage","setSelectedImage","handleButtonSearch","handleButtonDelete","buttonNumber","number","className","children","freeSolo","renderInput","label","variant","value","onChange","event","target","InputProps","fileName","_jsxFileName","lineNumber","columnNumber","renderOption","option","getOptionLabel","popupIcon","type","onClick","buttons","_c","$RefreshReg$"],"sources":["/Users/arsen/Desktop/Projects/remake_app/client/src/Search/SearchBar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport './SearchBar.css';\nimport ImageDisplay from '../ImageDisplay/ImageDisplay.jsx';\nimport ButtonList from '..//ButtonList.jsx';\n\nconst allowedMovies = require('./data/allowed_movies.json');\n\nconst SearchBar = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [options, setOptions] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieTitles = async () => {\n      try {\n        const response = await axios.get('https://api.themoviedb.org/3/search/movie', {\n          params: {\n            api_key: '8baba8ab6b8bbe247645bcae7df63d0d',\n            query: searchTerm\n          }\n        });\n        const matches = response.data.results.filter(movie => allowedMovies.movies.includes(movie.title));\n        const titles = matches.map(movie => movie.title);\n        setOptions(titles);\n      } catch (error) {\n        console.error(error);\n      }\n    };      \n    fetchMovieTitles();\n  }, [searchTerm]);\n\n  const [imageButtons, setImageButtons] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  const handleButtonSearch = () => {\n    if (selectedImage) {\n      setImageButtons([...imageButtons, selectedImage]);\n      setSelectedImage(null);\n    }\n  };\n\n  const handleButtonDelete = (buttonNumber) => {\n    setImageButtons(imageButtons.filter(number => number !== buttonNumber));\n  };\n\n  return (\n    <form className=\"search-container\">\n      <Autocomplete\n        freeSolo\n        options={options}\n        renderInput={params => (\n          <TextField\n            {...params}\n            className=\"search-input\"\n            label=\"Search movie titles\"\n            variant=\"outlined\"\n            value={searchTerm}\n            onChange={event => setSearchTerm(event.target.value)}\n            InputProps={{\n              ...params.InputProps,\n              className: 'search-input',\n            }}\n          />\n        )}\n        renderOption={option => <div className=\"search-option\">{option}</div>}\n        getOptionLabel={option => option}\n        popupIcon={<div className=\"search-indicator\">&#x25BC;</div>}\n      />\n      <button className=\"search-button\" type=\"button\" onClick={handleButtonSearch}>\n        Add Image Display\n      </button>\n      <ButtonList buttons={imageButtons} handleButtonDelete={handleButtonDelete} />\n      {selectedImage && <ImageDisplay selectedImage={selectedImage} />}\n    </form>\n  );\n};\n\nexport default SearchBar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}