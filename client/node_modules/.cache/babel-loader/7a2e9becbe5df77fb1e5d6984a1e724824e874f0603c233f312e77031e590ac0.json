{"ast":null,"code":"var _jsxFileName = \"/Users/arsen/Desktop/Projects/remake_app/src/Search/SearchBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport { Grid } from '@material-ui/core';\nimport allowedMovies from './data/allowed_movies.json';\n// import useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const classes = useStyles();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    const fetchMovieTitles = async () => {\n      try {\n        const response = await axios.get('https://api.themoviedb.org/3/search/movie', {\n          params: {\n            api_key: '8baba8ab6b8bbe247645bcae7df63d0d',\n            query: searchTerm\n          }\n        });\n        const firstMatch = response.data.results.find(movie => allowedMovies.movies.includes(movie.title));\n        setOptions(firstMatch ? [firstMatch.title] : []);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchMovieTitles();\n  }, [searchTerm]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"searchContainer\",\n    children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n      freeSolo: true,\n      options: options,\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n        ...params,\n        className: \"searchInput\",\n        label: \"Search movie titles\",\n        variant: \"outlined\",\n        value: searchTerm,\n        onChange: event => setSearchTerm(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"Y1RCEUygaJPkCvqimG1iBO4Sr78=\", true);\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","axios","Autocomplete","TextField","Grid","allowedMovies","jsxDEV","_jsxDEV","Search","_s","classes","useStyles","searchTerm","setSearchTerm","options","setOptions","fetchMovieTitles","response","get","params","api_key","query","firstMatch","data","results","find","movie","movies","includes","title","error","console","className","children","freeSolo","renderInput","label","variant","value","onChange","event","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/arsen/Desktop/Projects/remake_app/src/Search/SearchBar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport { Grid } from '@material-ui/core';\nimport allowedMovies from './data/allowed_movies.json';\n// import useStyles from './styles';\n\nconst Search = () => {\n  const classes = useStyles();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [options, setOptions] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieTitles = async () => {\n        try {\n          const response = await axios.get('https://api.themoviedb.org/3/search/movie', {\n            params: {\n              api_key: '8baba8ab6b8bbe247645bcae7df63d0d',\n              query: searchTerm\n            }\n          });\n          const firstMatch = response.data.results.find(movie => allowedMovies.movies.includes(movie.title));\n          setOptions(firstMatch ? [firstMatch.title] : []);\n        } catch (error) {\n          console.error(error);\n        }\n      };      \n    fetchMovieTitles();\n  }, [searchTerm]);\n\n  return (\n    <div className=\"searchContainer\">\n      <Autocomplete\n        freeSolo\n        options={options}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            className=\"searchInput\"\n            label=\"Search movie titles\"\n            variant=\"outlined\"\n            value={searchTerm}\n            onChange={(event) => setSearchTerm(event.target.value)}\n          />\n        )}\n      />\n    </div>\n  );\n};\n\nexport default Search;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,SAAS,MAAM,6BAA6B;AACnD,SAASC,IAAI,QAAQ,mBAAmB;AACxC,OAAOC,aAAa,MAAM,4BAA4B;AACtD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,OAAO,GAAGC,SAAS,EAAE;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMgB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,2CAA2C,EAAE;UAC5EC,MAAM,EAAE;YACNC,OAAO,EAAE,kCAAkC;YAC3CC,KAAK,EAAET;UACT;QACF,CAAC,CAAC;QACF,MAAMU,UAAU,GAAGL,QAAQ,CAACM,IAAI,CAACC,OAAO,CAACC,IAAI,CAACC,KAAK,IAAIrB,aAAa,CAACsB,MAAM,CAACC,QAAQ,CAACF,KAAK,CAACG,KAAK,CAAC,CAAC;QAClGd,UAAU,CAACO,UAAU,GAAG,CAACA,UAAU,CAACO,KAAK,CAAC,GAAG,EAAE,CAAC;MAClD,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACHd,gBAAgB,EAAE;EACpB,CAAC,EAAE,CAACJ,UAAU,CAAC,CAAC;EAEhB,oBACEL,OAAA;IAAKyB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9B1B,OAAA,CAACL,YAAY;MACXgC,QAAQ;MACRpB,OAAO,EAAEA,OAAQ;MACjBqB,WAAW,EAAGhB,MAAM,iBAClBZ,OAAA,CAACJ,SAAS;QAAA,GACJgB,MAAM;QACVa,SAAS,EAAC,aAAa;QACvBI,KAAK,EAAC,qBAAqB;QAC3BC,OAAO,EAAC,UAAU;QAClBC,KAAK,EAAE1B,UAAW;QAClB2B,QAAQ,EAAGC,KAAK,IAAK3B,aAAa,CAAC2B,KAAK,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAEzD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAACpC,EAAA,CAzCID,MAAM;AAAAsC,EAAA,GAANtC,MAAM;AA2CZ,eAAeA,MAAM;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}