{"ast":null,"code":"var _jsxFileName = \"/Users/arsen/Desktop/Projects/remake_app/src/Search/SearchBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport allowedMovies from './data/allowed_movies.json';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const classes = useStyles();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [options, setOptions] = useState([]);\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const response = await axios.get('https://api.themoviedb.org/3/search/movie', {\n          params: {\n            api_key: '8baba8ab6b8bbe247645bcae7df63d0d',\n            query: searchTerm\n          }\n        });\n        const movie = response.data.results.find(movie => allowedMovies.movies.includes(movie.title));\n        if (movie) {\n          setMovie(movie);\n        } else {\n          setMovie(null);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchMovie();\n  }, [searchTerm, allowedMovies]);\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    freeSolo: true,\n    options: options,\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n      ...params,\n      className: classes.searchInput,\n      label: \"Search movie titles\",\n      variant: \"outlined\",\n      value: searchTerm,\n      onChange: event => setSearchTerm(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"Y1RCEUygaJPkCvqimG1iBO4Sr78=\", false, function () {\n  return [useStyles];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","useEffect","axios","Autocomplete","TextField","allowedMovies","useStyles","jsxDEV","_jsxDEV","Search","_s","classes","searchTerm","setSearchTerm","options","setOptions","fetchMovie","response","get","params","api_key","query","movie","data","results","find","movies","includes","title","setMovie","error","console","freeSolo","renderInput","className","searchInput","label","variant","value","onChange","event","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/arsen/Desktop/Projects/remake_app/src/Search/SearchBar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport allowedMovies from './data/allowed_movies.json';\nimport useStyles from './styles';\n\nconst Search = () => {\n  const classes = useStyles();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [options, setOptions] = useState([]);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const response = await axios.get('https://api.themoviedb.org/3/search/movie', {\n          params: {\n            api_key: '8baba8ab6b8bbe247645bcae7df63d0d',\n            query: searchTerm\n          }\n        });\n  \n        const movie = response.data.results.find(movie => allowedMovies.movies.includes(movie.title));\n        if (movie) {\n          setMovie(movie);\n        } else {\n          setMovie(null);\n        }\n  \n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchMovie();\n  }, [searchTerm, allowedMovies]);\n  \n\n  return (\n    <Autocomplete\n      freeSolo\n      options={options}\n      renderInput={params => (\n        <TextField\n          {...params}\n          className={classes.searchInput}\n          label=\"Search movie titles\"\n          variant=\"outlined\"\n          value={searchTerm}\n          onChange={event => setSearchTerm(event.target.value)}\n        />\n      )}\n    />\n  );\n};\n\nexport default Search;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,SAAS,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,OAAO,GAAGL,SAAS,EAAE;EAC3B,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd,MAAMe,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,2CAA2C,EAAE;UAC5EC,MAAM,EAAE;YACNC,OAAO,EAAE,kCAAkC;YAC3CC,KAAK,EAAET;UACT;QACF,CAAC,CAAC;QAEF,MAAMU,KAAK,GAAGL,QAAQ,CAACM,IAAI,CAACC,OAAO,CAACC,IAAI,CAACH,KAAK,IAAIjB,aAAa,CAACqB,MAAM,CAACC,QAAQ,CAACL,KAAK,CAACM,KAAK,CAAC,CAAC;QAC7F,IAAIN,KAAK,EAAE;UACTO,QAAQ,CAACP,KAAK,CAAC;QACjB,CAAC,MAAM;UACLO,QAAQ,CAAC,IAAI,CAAC;QAChB;MAEF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACDd,UAAU,EAAE;EACd,CAAC,EAAE,CAACJ,UAAU,EAAEP,aAAa,CAAC,CAAC;EAG/B,oBACEG,OAAA,CAACL,YAAY;IACX6B,QAAQ;IACRlB,OAAO,EAAEA,OAAQ;IACjBmB,WAAW,EAAEd,MAAM,iBACjBX,OAAA,CAACJ,SAAS;MAAA,GACJe,MAAM;MACVe,SAAS,EAAEvB,OAAO,CAACwB,WAAY;MAC/BC,KAAK,EAAC,qBAAqB;MAC3BC,OAAO,EAAC,UAAU;MAClBC,KAAK,EAAE1B,UAAW;MAClB2B,QAAQ,EAAEC,KAAK,IAAI3B,aAAa,CAAC2B,KAAK,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAEvD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEN,CAAC;AAACnC,EAAA,CA9CID,MAAM;EAAA,QACMH,SAAS;AAAA;AAAAwC,EAAA,GADrBrC,MAAM;AAgDZ,eAAeA,MAAM;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}