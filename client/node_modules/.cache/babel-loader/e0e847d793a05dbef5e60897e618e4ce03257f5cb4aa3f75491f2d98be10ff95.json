{"ast":null,"code":"var _jsxFileName = \"/Users/arsen/Desktop/Projects/remake_app/src/Search/SearchBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Chip from '@material-ui/core/Chip';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  searchInput: {\n    width: '100%',\n    maxWidth: 400\n  }\n}));\nconst Search = () => {\n  _s();\n  const classes = useStyles();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [options, setOptions] = useState(['Pulp Fiction', 'Lion King', 'Dumb Dumber', 'Fight Club', 'Interstellar', 'The Matrix', 'Forest Gump', 'Shawshank Redemption', 'Inception', 'American Psycho']);\n  const filteredOptions = options.filter(option => option.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    freeSolo: true,\n    options: filteredOptions,\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n      ...params,\n      className: classes.searchInput,\n      label: \"Search movie titles\",\n      variant: \"outlined\",\n      value: searchTerm,\n      onChange: event => setSearchTerm(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"YOGvYp3EwLerRpBsFY0uJJd12gA=\", false, function () {\n  return [useStyles];\n});\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","Autocomplete","TextField","Chip","makeStyles","jsxDEV","_jsxDEV","useStyles","theme","searchInput","width","maxWidth","Search","_s","classes","searchTerm","setSearchTerm","options","setOptions","filteredOptions","filter","option","toLowerCase","includes","freeSolo","renderInput","params","className","label","variant","value","onChange","event","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/arsen/Desktop/Projects/remake_app/src/Search/SearchBar.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport Chip from '@material-ui/core/Chip';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n  searchInput: {\n    width: '100%',\n    maxWidth: 400\n  }\n}));\n\nconst Search = () => {\n  const classes = useStyles();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [options, setOptions] = useState([\n    'Pulp Fiction',\n    'Lion King',\n    'Dumb Dumber',\n    'Fight Club',\n    'Interstellar',\n    'The Matrix',\n    'Forest Gump',\n    'Shawshank Redemption',\n    'Inception',\n    'American Psycho'\n  ]);\n\n  const filteredOptions = options.filter(option =>\n    option.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <Autocomplete\n      freeSolo\n      options={filteredOptions}\n      renderInput={params => (\n        <TextField\n          {...params}\n          className={classes.searchInput}\n          label=\"Search movie titles\"\n          variant=\"outlined\"\n          value={searchTerm}\n          onChange={event => setSearchTerm(event.target.value)}\n        />\n      )}\n    />\n  );\n};\n\nexport default Search;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,SAAS,MAAM,6BAA6B;AACnD,OAAOC,IAAI,MAAM,wBAAwB;AACzC,SAASC,UAAU,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,SAAS,GAAGH,UAAU,CAACI,KAAK,KAAK;EACrCC,WAAW,EAAE;IACXC,KAAK,EAAE,MAAM;IACbC,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC,CAAC;AAEH,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,OAAO,GAAGP,SAAS,EAAE;EAC3B,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,CACrC,cAAc,EACd,WAAW,EACX,aAAa,EACb,YAAY,EACZ,cAAc,EACd,YAAY,EACZ,aAAa,EACb,sBAAsB,EACtB,WAAW,EACX,iBAAiB,CAClB,CAAC;EAEF,MAAMmB,eAAe,GAAGF,OAAO,CAACG,MAAM,CAACC,MAAM,IAC3CA,MAAM,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACR,UAAU,CAACO,WAAW,EAAE,CAAC,CACxD;EAED,oBACEhB,OAAA,CAACL,YAAY;IACXuB,QAAQ;IACRP,OAAO,EAAEE,eAAgB;IACzBM,WAAW,EAAEC,MAAM,iBACjBpB,OAAA,CAACJ,SAAS;MAAA,GACJwB,MAAM;MACVC,SAAS,EAAEb,OAAO,CAACL,WAAY;MAC/BmB,KAAK,EAAC,qBAAqB;MAC3BC,OAAO,EAAC,UAAU;MAClBC,KAAK,EAAEf,UAAW;MAClBgB,QAAQ,EAAEC,KAAK,IAAIhB,aAAa,CAACgB,KAAK,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAEvD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEN,CAAC;AAACxB,EAAA,CApCID,MAAM;EAAA,QACML,SAAS;AAAA;AAAA+B,EAAA,GADrB1B,MAAM;AAsCZ,eAAeA,MAAM;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}